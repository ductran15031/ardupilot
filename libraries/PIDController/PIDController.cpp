/*
    PIDcontroller.c
    Generated by Gene-Auto toolset ver 2.4.10
    (launcher GALauncher)
    Generated on: 14/03/2014 09:28:51.786
    source model: PIDcontroller
    model version: 6.5
    last saved by:
    last saved on:
*/

/* Includes */

#include "PIDController.h"

/* Variable definitions */

GAUINT8 i1;

/* Function definitions */

void PIDcontroller_init(t_PIDcontroller_state *_state_) {
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SequentialBlock: name=t_prev>  */

    _state_->t_prev_memory = (0);
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SequentialBlock: name=t_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_1 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_2 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_3 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_4 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    _state_->y_prev_memory_1 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    _state_->y_prev_memory_2 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    _state_->y_prev_memory_3 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    _state_->y_prev_memory_4 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_5 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_6 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_7 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_8 = 0;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
}

void PIDcontroller_compute(t_PIDcontroller_io *_io_, t_PIDcontroller_state *_state_) {
    /*  Output from <SystemBlock: name=PIDcontroller>/<SourceBlock: name=t>/<OutDataPort: name=>  */
    GAREAL t;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SourceBlock: name=e>/<OutDataPort: name=>  */
    GAREAL e[4];
    /*  Output from <SystemBlock: name=PIDcontroller>/<SourceBlock: name=gains>/<OutDataPort: name=>  */
    GAREAL gains[12];
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux>/<OutDataPort: name=>  */
    GAREAL Demux_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux>/<OutDataPort: name=>  */
    GAREAL Demux_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux>/<OutDataPort: name=>  */
    GAREAL Demux_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux>/<OutDataPort: name=>  */
    GAREAL Demux_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_5;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_6;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_7;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_8;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_9;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_10;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_11;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>/<OutDataPort: name=>  */
    GAREAL Demux1_12;
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Mux>/<OutDataPort: name=>  */
    GAREAL y[4];
    /*  Output from <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=dt>/<OutDataPort: name=>  */
    GAREAL dt;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SequentialBlock: name=t_prev>/<OutDataPort: name=>  */
    GAREAL t_prev;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide>/<OutDataPort: name=>  */
    GAREAL Divide_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide1>/<OutDataPort: name=>  */
    GAREAL Divide1_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide2>/<OutDataPort: name=>  */
    GAREAL Divide2_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Sum>/<OutDataPort: name=>  */
    GAREAL y_phi;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>/<OutDataPort: name=>  */
    GAREAL Divide_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>/<OutDataPort: name=>  */
    GAREAL Subtract1_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>/<OutDataPort: name=>  */
    GAREAL u_prev_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>/<OutDataPort: name=>  */
    GAREAL Add_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>/<OutDataPort: name=>  */
    GAREAL Multiply_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>/<OutDataPort: name=>  */
    GAREAL add_u_u_prev_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>/<OutDataPort: name=>  */
    GAREAL half_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>/<OutDataPort: name=>  */
    GAREAL u_prev_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>/<OutDataPort: name=>  */
    GAREAL y_prev_2;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide>/<OutDataPort: name=>  */
    GAREAL Divide_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide1>/<OutDataPort: name=>  */
    GAREAL Divide1_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide2>/<OutDataPort: name=>  */
    GAREAL Divide2_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Sum>/<OutDataPort: name=>  */
    GAREAL y_psi;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>/<OutDataPort: name=>  */
    GAREAL Divide_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>/<OutDataPort: name=>  */
    GAREAL Subtract1_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>/<OutDataPort: name=>  */
    GAREAL u_prev_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>/<OutDataPort: name=>  */
    GAREAL Add_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>/<OutDataPort: name=>  */
    GAREAL Multiply_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>/<OutDataPort: name=>  */
    GAREAL add_u_u_prev_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>/<OutDataPort: name=>  */
    GAREAL half_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>/<OutDataPort: name=>  */
    GAREAL u_prev_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>/<OutDataPort: name=>  */
    GAREAL y_prev_1;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide>/<OutDataPort: name=>  */
    GAREAL Divide_5;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide1>/<OutDataPort: name=>  */
    GAREAL Divide1_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide2>/<OutDataPort: name=>  */
    GAREAL Divide2_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Sum>/<OutDataPort: name=>  */
    GAREAL y_theta;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>/<OutDataPort: name=>  */
    GAREAL Divide_6;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>/<OutDataPort: name=>  */
    GAREAL Subtract1_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>/<OutDataPort: name=>  */
    GAREAL u_prev_5;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>/<OutDataPort: name=>  */
    GAREAL Add_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>/<OutDataPort: name=>  */
    GAREAL Multiply_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>/<OutDataPort: name=>  */
    GAREAL add_u_u_prev_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>/<OutDataPort: name=>  */
    GAREAL half_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>/<OutDataPort: name=>  */
    GAREAL u_prev_6;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>/<OutDataPort: name=>  */
    GAREAL y_prev_3;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide>/<OutDataPort: name=>  */
    GAREAL Divide_7;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide1>/<OutDataPort: name=>  */
    GAREAL Divide1_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide2>/<OutDataPort: name=>  */
    GAREAL Divide2_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Sum>/<OutDataPort: name=>  */
    GAREAL y_z;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>/<OutDataPort: name=>  */
    GAREAL Divide_8;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>/<OutDataPort: name=>  */
    GAREAL Subtract1_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>/<OutDataPort: name=>  */
    GAREAL u_prev_7;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>/<OutDataPort: name=>  */
    GAREAL Add_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>/<OutDataPort: name=>  */
    GAREAL Multiply_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>/<OutDataPort: name=>  */
    GAREAL add_u_u_prev_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>/<OutDataPort: name=>  */
    GAREAL half_4;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>/<OutDataPort: name=>  */
    GAREAL u_prev_8;
    /*  Output from <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>/<OutDataPort: name=>  */
    GAREAL y_prev_4;
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SourceBlock: name=t>  */
    t = _io_->t;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SourceBlock: name=t>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SequentialBlock: name=t_prev>  */
    t_prev = _state_->t_prev_memory;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SequentialBlock: name=t_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=dt>  */
    dt = t - t_prev;
    if ((dt == 0.0) || (dt>1.0))
    {
        _state_->t_prev_memory = t;
        return;
    }
    else
    {
    /*  END Block: <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=dt>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SourceBlock: name=e>  */
    for (i1 = 0; i1 < 4; i1++) {
        e[i1] = _io_->e[i1];
    }
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SourceBlock: name=e>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>  */
    half_2 = 0.5;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>  */
    half_1 = 0.5;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>  */
    half_3 = 0.5;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>  */
    half_4 = 0.5;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SourceBlock: name=half>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SourceBlock: name=gains>  */
    for (i1 = 0; i1 < 12; i1++) {
        gains[i1] = _io_->gains[i1];
    }
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SourceBlock: name=gains>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux>  */
    Demux_2 = e[0];
    Demux_1 = e[1];
    Demux_3 = e[2];
    Demux_4 = e[3];
    /*  END Block: <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    u_prev_1 = _state_->u_prev_memory_1;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    u_prev_4 = _state_->u_prev_memory_2;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    u_prev_6 = _state_->u_prev_memory_3;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    u_prev_8 = _state_->u_prev_memory_4;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    y_prev_2 = _state_->y_prev_memory_1;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    y_prev_1 = _state_->y_prev_memory_2;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    y_prev_3 = _state_->y_prev_memory_3;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    y_prev_4 = _state_->y_prev_memory_4;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    u_prev_2 = _state_->u_prev_memory_5;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    u_prev_3 = _state_->u_prev_memory_6;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    u_prev_5 = _state_->u_prev_memory_7;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    u_prev_7 = _state_->u_prev_memory_8;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>  */
    Demux1_2 = gains[0];
    Demux1_1 = gains[1];
    Demux1_3 = gains[2];
    Demux1_4 = gains[3];
    Demux1_5 = gains[4];
    Demux1_6 = gains[5];
    Demux1_7 = gains[6];
    Demux1_8 = gains[7];
    Demux1_9 = gains[8];
    Demux1_10 = gains[9];
    Demux1_11 = gains[10];
    Demux1_12 = gains[11];
    /*  END Block: <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Demux1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide>  */
    Divide_2 = Demux_1 * Demux1_4;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide>  */
    Divide_3 = Demux_4 * Demux1_10;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide>  */
    Divide_5 = Demux_3 * Demux1_7;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide>  */
    Divide_7 = Demux_2 * Demux1_2;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide1>  */
    Divide1_2 = Divide_2 * Demux1_5;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide1>  */
    Divide1_1 = Divide_3 * Demux1_11;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide1>  */
    Divide1_3 = Divide_5 * Demux1_8;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide1>  */
    Divide1_4 = Divide_7 * Demux1_1;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>  */
    add_u_u_prev_2 = Divide1_2 + u_prev_1;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>  */
    Multiply_2 = dt * half_2 * add_u_u_prev_2;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>  */
    add_u_u_prev_1 = Divide1_1 + u_prev_4;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>  */
    Multiply_1 = dt * half_1 * add_u_u_prev_1;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>  */
    add_u_u_prev_3 = Divide1_3 + u_prev_6;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>  */
    Multiply_3 = dt * half_3 * add_u_u_prev_3;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>  */
    add_u_u_prev_4 = Divide1_4 + u_prev_8;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=add_u_u_prev>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>  */
    Multiply_4 = dt * half_4 * add_u_u_prev_4;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Multiply>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>  */
    Add_2 = Multiply_2 + y_prev_2;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>  */
    Add_1 = Multiply_1 + y_prev_1;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>  */
    Add_3 = Multiply_3 + y_prev_3;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>  */
    Add_4 = Multiply_4 + y_prev_4;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<CombinatorialBlock: name=Add>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide2>  */
    Divide2_2 = Divide_2 * Demux1_6;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Divide2>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide2>  */
    Divide2_1 = Divide_3 * Demux1_12;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Divide2>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide2>  */
    Divide2_3 = Divide_5 * Demux1_9;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Divide2>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide2>  */
    Divide2_4 = Divide_7 * Demux1_3;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Divide2>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>  */
    Subtract1_2 = Divide2_2 - u_prev_2;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>  */
    Divide_1 = Subtract1_2 / dt;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Sum>  */
    y_phi = Divide_2 + Add_2 + Divide_1;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<CombinatorialBlock: name=Sum>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>  */
    Subtract1_1 = Divide2_1 - u_prev_3;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>  */
    Divide_4 = Subtract1_1 / dt;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Sum>  */
    y_psi = Divide_3 + Add_1 + Divide_4;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<CombinatorialBlock: name=Sum>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>  */
    Subtract1_3 = Divide2_3 - u_prev_5;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>  */
    Divide_6 = Subtract1_3 / dt;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Sum>  */
    y_theta = Divide_5 + Add_3 + Divide_6;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<CombinatorialBlock: name=Sum>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>  */
    Subtract1_4 = Divide2_4 - u_prev_7;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Subtract1>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>  */
    Divide_8 = Subtract1_4 / dt;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<CombinatorialBlock: name=Divide>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Sum>  */
    y_z = Divide_7 + Add_4 + Divide_8;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<CombinatorialBlock: name=Sum>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Mux>  */
    y[0] = y_z;
    y[1] = y_phi;
    y[2] = y_theta;
    y[3] = y_psi;
    /*  END Block: <SystemBlock: name=PIDcontroller>/<CombinatorialBlock: name=Mux>  */
    /*  START Block: <SystemBlock: name=PIDcontroller>/<SinkBlock: name=y>  */
    for (i1 = 0; i1 < 4; i1++) {
        _io_->y[i1] = y[i1];
    }
    /*  END Block: <SystemBlock: name=PIDcontroller>/<SinkBlock: name=y>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_8 = Divide2_4;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_7 = Divide2_3;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_6 = Divide2_1;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_5 = Divide2_2;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Derivative>/<SequentialBlock: name=u_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    _state_->y_prev_memory_4 = Add_4;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    _state_->y_prev_memory_3 = Add_3;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    _state_->y_prev_memory_2 = Add_1;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    _state_->y_prev_memory_1 = Add_2;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=y_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_4 = Divide1_4;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_z>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_3 = Divide1_3;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_theta>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_2 = Divide1_1;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_psi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    _state_->u_prev_memory_1 = Divide1_2;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SystemBlock: name=PID_phi>/<SystemBlock: name=Intergrator>/<SequentialBlock: name=u_prev>  */
    /*  START Block memory write: <SystemBlock: name=PIDcontroller>/<SequentialBlock: name=t_prev>  */
    _state_->t_prev_memory = t;
    /*  END Block memory write: <SystemBlock: name=PIDcontroller>/<SequentialBlock: name=t_prev>  */
    }
}

