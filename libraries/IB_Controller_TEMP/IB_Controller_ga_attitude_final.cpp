/*
    IB_Controller_ga_attitude_final.c
    Generated by Gene-Auto toolset ver 2.4.10
    (launcher GALauncher)
    Generated on: 08/06/2015 13:08:18.437
    source model: IB_Controller_ga_attitude_final
    model version: 6.5
    last saved by:
    last saved on:
*/



#include "IB_Controller_ga_attitude_final.h"



GAUINT8 i1_3;



void IB_Controller_ga_attitude_final_init(t_IB_Controller_ga_attitude_final_state *_state_) {
    

    _state_->Unit_Delay2_memory_1 = 0;
    
    
    _state_->Unit_Delay2_memory_2 = 0;
    
    
    _state_->Unit_Delay2_memory_3 = 0;
    
    
    _state_->Unit_Delay2_memory_4 = 0;
    
    
    _state_->Unit_Delay2_memory_5 = 0;
    
    
    _state_->Unit_Delay2_memory_6 = 0;
    
    
    _state_->Unit_Delay2_memory_7 = 0;
    
    
    _state_->Unit_Delay2_memory_8 = 0;
    
    
    _state_->Unit_Delay2_memory_9 = 0;
    
    
    _state_->Unit_Delay2_memory_10 = 0;
    
    
    _state_->Unit_Delay2_memory_11 = 0;
    
    
    _state_->Unit_Delay2_memory_12 = 0;
    
    
    _state_->Unit_Delay1_memory_1 = 0;
    
    
    _state_->Unit_Delay1_memory_2 = 0;
    
    
    _state_->Unit_Delay1_memory_3 = 0;
    
    
    _state_->Unit_Delay1_memory_4 = 0;
    
    
    _state_->Unit_Delay1_memory_5 = 0;
    
    
    _state_->Unit_Delay1_memory_6 = 0;
    
    
    _state_->Unit_Delay1_memory_7 = 0;
    
    
    _state_->Unit_Delay1_memory_8 = 0;
    
    
    _state_->Unit_Delay1_memory_9 = 0;
    
    
    _state_->Unit_Delay1_memory_10 = 0;
    
    
    _state_->Unit_Delay1_memory_11 = 0;
    
    
    _state_->Unit_Delay1_memory_12 = 0;
    
}

void IB_Controller_ga_attitude_final_compute(t_IB_Controller_ga_attitude_final_io *_io_, t_IB_Controller_ga_attitude_final_state *_state_) {
    
    GAREAL angles[6];
    
    GAREAL thetad;
    
    GAREAL phid;
    
    GAREAL psid;
    
    GAREAL dt;
    
    GAREAL omgs[4];
    
    GAREAL Demux_2;
    
    GAREAL Demux_1;
    
    GAREAL Demux_3;
    
    GAREAL Demux_4;
    
    GAREAL Demux_5;
    
    GAREAL Demux_6;
    
    GAREAL Mux_2[3];
    
    GAREAL Mux1_2[3];
    
    GAREAL Mux2[3];
    
    GAREAL Add2_2;
    
    GAREAL Constant_2;
    
    GAREAL Gain2_2;
    
    GAREAL Gain3_2;
    
    GAREAL Product_2;
    
    GAREAL Product1_2;
    
    GABOOL Relational_Operator4_2;
    
    GABOOL Relational_Operator5_2;
    
    GAREAL Switch5_2;
    
    GAREAL Add2_1;
    
    GAREAL Constant_1;
    
    GAREAL Gain2_1;
    
    GAREAL Gain3_1;
    
    GAREAL Product_1;
    
    GAREAL Product1_1;
    
    GABOOL Relational_Operator4_1;
    
    GABOOL Relational_Operator5_1;
    
    GAREAL Switch5_1;
    
    GAREAL Add2_3;
    
    GAREAL Constant_3;
    
    GAREAL Gain2_3;
    
    GAREAL Gain3_3;
    
    GAREAL Product_3;
    
    GAREAL Product1_3;
    
    GABOOL Relational_Operator4_3;
    
    GABOOL Relational_Operator5_3;
    
    GAREAL Switch5_3;
    
    GAREAL e3_1;
    
    GAREAL e4;
    
    GAREAL theta;
    
    GAREAL phidot;
    
    GAREAL psidot;
    
    GAREAL Mux_1[3];
    
    GAREAL Mux1_1[7];
    
    GAREAL Gain5_2;
    
    GAREAL thetaddot;
    
    GAREAL Sum1_2;
    
    GAREAL Add_2;
    
    GAREAL Product_4;
    
    GAREAL Unit_Delay1_2;
    
    GAREAL Unit_Delay2_2;
    
    GAREAL Gain5_1;
    
    GAREAL thetaddotdot;
    
    GAREAL Sum1_1;
    
    GAREAL Add_1;
    
    GAREAL Product_5;
    
    GAREAL Unit_Delay1_1;
    
    GAREAL Unit_Delay2_1;
    
    GAREAL Gain5_3;
    
    GAREAL Gain6_2;
    
    GAREAL Sum1_3;
    
    GAREAL Add_3;
    
    GAREAL Product_6;
    
    GAREAL Unit_Delay1_3;
    
    GAREAL Unit_Delay2_3;
    
    GAREAL Add_4;
    
    GAUINT8 Constant_4;
    
    GAREAL Constant1_2;
    
    GAREAL Demux_7;
    
    GAREAL Demux_8;
    
    GAREAL Demux_9;
    
    GAREAL Product_7;
    
    GAREAL Product1_4;
    
    GAREAL X2;
    
    GAREAL Product_8;
    
    GAREAL Unit_Delay1_4;
    
    GAREAL Unit_Delay2_4;
    
    GAREAL _1_c7_2_ld1_2;
    
    GAREAL _1_c7_2_ld4_2;
    
    GAREAL Constant_5;
    
    GAREAL Constant1_1;
    
    GAREAL Constant2_2;
    
    GAUINT8 Constant3_2;
    
    GAUINT8 Constant4_2;
    
    GAREAL Constant5_2;
    
    GAREAL Demux_10;
    
    GAREAL Demux_11;
    
    GAREAL Demux_12;
    
    GAREAL Demux_13;
    
    GAREAL Demux_14;
    
    GAREAL Demux_15;
    
    GAREAL Demux_16;
    
    GAREAL U3;
    
    GAREAL Product1_5;
    
    GAREAL Product2_2;
    
    GAREAL Product3_2;
    
    GAUINT8 c7_c8_2;
    
    GAUINT8 c7_2_2;
    
    GAUINT8 ld1_2;
    
    GAREAL u4_1_c7_2_ld4__2;
    
    GAREAL u6_c7_c8__2;
    
    GAREAL e1;
    
    GAREAL e2;
    
    GAREAL Demux_17;
    
    GAREAL Demux_18;
    
    GAREAL Demux_19;
    
    GAREAL Mux_3[3];
    
    GAREAL Mux1_3[7];
    
    GAREAL Gain5_4;
    
    GAREAL Gain6_1;
    
    GAREAL Sum1_4;
    
    GAREAL Add_5;
    
    GAREAL Product_9;
    
    GAREAL Unit_Delay1_5;
    
    GAREAL Unit_Delay2_5;
    
    GAREAL Gain5_5;
    
    GAREAL phiddotdot;
    
    GAREAL Sum1_5;
    
    GAREAL Add_6;
    
    GAREAL Product_10;
    
    GAREAL Unit_Delay1_6;
    
    GAREAL Unit_Delay2_6;
    
    GAREAL Gain5_6;
    
    GAREAL Gain6_3;
    
    GAREAL Sum1_6;
    
    GAREAL Add_7;
    
    GAREAL Product_11;
    
    GAREAL Unit_Delay1_7;
    
    GAREAL Unit_Delay2_7;
    
    GAREAL Add_8;
    
    GAUINT8 Constant_6;
    
    GAREAL Constant1_3;
    
    GAREAL Demux_20;
    
    GAREAL Demux_21;
    
    GAREAL Demux_22;
    
    GAREAL Product_12;
    
    GAREAL Product1_6;
    
    GAREAL X1;
    
    GAREAL Product_13;
    
    GAREAL Unit_Delay1_8;
    
    GAREAL Unit_Delay2_8;
    
    GAREAL _1_c7_2_ld1_1;
    
    GAREAL _1_c7_2_ld4_1;
    
    GAREAL Constant_7;
    
    GAREAL Constant1_4;
    
    GAREAL Constant2_1;
    
    GAUINT8 Constant3_1;
    
    GAUINT8 Constant4_1;
    
    GAREAL Constant5_1;
    
    GAREAL Demux_23;
    
    GAREAL Demux_24;
    
    GAREAL Demux_25;
    
    GAREAL Demux_26;
    
    GAREAL Demux_27;
    
    GAREAL Demux_28;
    
    GAREAL Demux_29;
    
    GAREAL U2;
    
    GAREAL Product1_7;
    
    GAREAL Product2_1;
    
    GAREAL Product3_1;
    
    GAUINT8 c7_c8_1;
    
    GAUINT8 c7_2_1;
    
    GAUINT8 ld1_1;
    
    GAREAL u4_1_c7_2_ld4__1;
    
    GAREAL u6_c7_c8__1;
    
    GAREAL omgr;
    
    GAREAL Demux_30;
    
    GAREAL Demux_31;
    
    GAREAL Demux_32;
    
    GAREAL Demux_33;
    
    GAREAL e5_2;
    
    GAREAL e6;
    
    GAREAL psi;
    
    GAREAL phidot_4;
    
    GAREAL thetadot;
    
    GAREAL Mux_4[3];
    
    GAREAL Mux1_4[7];
    
    GAREAL Gain5_7;
    
    GAREAL psiddot_8;
    
    GAREAL Sum1_7;
    
    GAREAL Add_9;
    
    GAREAL Product_14;
    
    GAREAL Unit_Delay1_9;
    
    GAREAL Unit_Delay2_9;
    
    GAREAL Gain5_8;
    
    GAREAL psiddotdot;
    
    GAREAL Sum1_8;
    
    GAREAL Add_10;
    
    GAREAL Product_15;
    
    GAREAL Unit_Delay1_10;
    
    GAREAL Unit_Delay2_10;
    
    GAREAL Gain5_9;
    
    GAREAL psidot_5;
    
    GAREAL Sum1_9;
    
    GAREAL Add_11;
    
    GAREAL Product_16;
    
    GAREAL Unit_Delay1_11;
    
    GAREAL Unit_Delay2_11;
    
    GAREAL Add_12;
    
    GAUINT8 Constant_8;
    
    GAREAL Constant1_5;
    
    GAREAL Demux_34;
    
    GAREAL Demux_35;
    
    GAREAL Demux_36;
    
    GAREAL Product_17;
    
    GAREAL Product1_8;
    
    GAREAL X3;
    
    GAREAL Product_18;
    
    GAREAL Unit_Delay1_12;
    
    GAREAL Unit_Delay2_12;
    
    GAREAL _1_c7_2_ld1_3;
    
    GAREAL _1_c7_2_ld4_3;
    
    GAREAL Constant_9;
    
    GAREAL Constant1_6;
    
    GAUINT8 Constant2_3;
    
    GAUINT8 Constant3_3;
    
    GAREAL Constant4_3;
    
    GAREAL Demux_37;
    
    GAREAL Demux_38;
    
    GAREAL Demux_39;
    
    GAREAL Demux_40;
    
    GAREAL Demux_41;
    
    GAREAL Demux_42;
    
    GAREAL Demux_43;
    
    GAREAL U4;
    
    GAREAL Product1_9;
    
    GAREAL Product2_3;
    
    GAUINT8 c7_c8_3;
    
    GAUINT8 c7_2_3;
    
    GAUINT8 ld1_3;
    
    GAREAL u4_1_c7_2_ld4__3;
    
    GAREAL u6_c7_c8__3;
    
    ld1_2 = 1;
    
    
    ld1_1 = 1;
    
    
    ld1_3 = 1;
    
    
    phid = _io_->phid;
    
    
    for (i1_3 = 0; i1_3 < 6; i1_3++) {
        angles[i1_3] = _io_->angles[i1_3];
    }
    
    
    Demux_2 = angles[0];
    Demux_1 = angles[1];
    Demux_3 = angles[2];
    Demux_4 = angles[3];
    Demux_5 = angles[4];
    Demux_6 = angles[5];
    
    
    Mux_2[0] = Demux_2;
    Mux_2[1] = Demux_5;
    Mux_2[2] = Demux_6;
    
    
    Demux_17 = Mux_2[0];
    Demux_18 = Mux_2[1];
    Demux_19 = Mux_2[2];
    
    
    Constant_2 = 1.257;
    
    
    Constant_1 = 1.257;
    
    
    Constant_3 = 0.279/2.0;
    
    
    Unit_Delay2_2 = _state_->Unit_Delay2_memory_1;
    
    
    Unit_Delay2_1 = _state_->Unit_Delay2_memory_2;
    
    
    Unit_Delay2_3 = _state_->Unit_Delay2_memory_3;
    
    
    Unit_Delay2_4 = _state_->Unit_Delay2_memory_4;
    
    
    Unit_Delay2_5 = _state_->Unit_Delay2_memory_5;
    
    
    Unit_Delay2_6 = _state_->Unit_Delay2_memory_6;
    
    
    Unit_Delay2_7 = _state_->Unit_Delay2_memory_7;
    
    
    Unit_Delay2_8 = _state_->Unit_Delay2_memory_8;
    
    
    Unit_Delay2_9 = _state_->Unit_Delay2_memory_9;
    
    
    Unit_Delay2_10 = _state_->Unit_Delay2_memory_10;
    
    
    Unit_Delay2_11 = _state_->Unit_Delay2_memory_11;
    
    
    Unit_Delay2_12 = _state_->Unit_Delay2_memory_12;
    
    
    Gain2_2 = -1 * Constant_2;
    
    
    Gain2_1 = -1 * Constant_1;
    
    
    Gain2_3 = -1 * Constant_3;
    
    
    Unit_Delay1_2 = _state_->Unit_Delay1_memory_1;
    
    
    Unit_Delay1_1 = _state_->Unit_Delay1_memory_2;
    
    
    Unit_Delay1_3 = _state_->Unit_Delay1_memory_3;
    
    
    Unit_Delay1_4 = _state_->Unit_Delay1_memory_4;
    
    
    Unit_Delay1_5 = _state_->Unit_Delay1_memory_5;
    
    
    Unit_Delay1_6 = _state_->Unit_Delay1_memory_6;
    
    
    Unit_Delay1_7 = _state_->Unit_Delay1_memory_7;
    
    
    Unit_Delay1_8 = _state_->Unit_Delay1_memory_8;
    
    
    Unit_Delay1_9 = _state_->Unit_Delay1_memory_9;
    
    
    Unit_Delay1_10 = _state_->Unit_Delay1_memory_10;
    
    
    Unit_Delay1_11 = _state_->Unit_Delay1_memory_11;
    
    
    Unit_Delay1_12 = _state_->Unit_Delay1_memory_12;
    
    
    Mux1_2[0] = Demux_1;
    Mux1_2[1] = Demux_4;
    Mux1_2[2] = Demux_6;
    
    
    theta = Mux1_2[0];
    phidot = Mux1_2[1];
    psidot = Mux1_2[2];
    
    
    e1 = phid - Demux_17;
    
    
    Constant_4 = c3;
    
    
    Constant_6 = c1;
    
    
    Constant_8 = c5;
    
    
    dt = _io_->dt;
    
    
    Product_4 = dt * Unit_Delay2_2;
    
    
    Product_5 = dt * Unit_Delay2_1;
    
    
    Product_6 = dt * Unit_Delay2_3;
    
    
    Product_8 = dt * Unit_Delay2_4;
    
    
    Product_9 = dt * Unit_Delay2_5;
    
    
    Product_10 = dt * Unit_Delay2_6;
    
    
    Product_11 = dt * Unit_Delay2_7;
    
    
    Product_13 = dt * Unit_Delay2_8;
    
    
    Product_14 = dt * Unit_Delay2_9;
    
    
    Product_15 = dt * Unit_Delay2_10;
    
    
    Product_16 = dt * Unit_Delay2_11;
    
    
    Product_18 = dt * Unit_Delay2_12;
    
    
    Add_2 = Product_4 + Unit_Delay1_2;
    
    
    Add_1 = Product_5 + Unit_Delay1_1;
    
    
    Add_3 = Product_6 + Unit_Delay1_3;
    
    
    X2 = Product_8 + Unit_Delay1_4;
    
    
    Add_5 = Product_9 + Unit_Delay1_5;
    
    
    Sum1_4 = phid - Add_5;
    
    
    Gain6_1 = (double) 1 / Tcr1 * Sum1_4;
    
    
    _state_->Scope1_memory_1 = Gain6_1;
    
    
    Gain5_4 = (double) 1 / Tcr1 * Sum1_4;
    
    
    Add_6 = Product_10 + Unit_Delay1_6;
    
    
    Sum1_5 = Gain6_1 - Add_6;
    
    
    phiddotdot = (double) 1 / Tcr2 * Sum1_5;
    
    
    _state_->Scope_memory = phiddotdot;
    
    
    Gain5_5 = (double) 1 / Tcr2 * Sum1_5;
    
    
    Add_7 = Product_11 + Unit_Delay1_7;
    
    
    Sum1_6 = Demux_17 - Add_7;
    
    
    Gain6_3 = (double) 1 / Tcr3 * Sum1_6;
    
    
    Gain5_6 = (double) 1 / Tcr3 * Sum1_6;
    
    
    X1 = Product_13 + Unit_Delay1_8;
    
    
    Add_9 = Product_14 + Unit_Delay1_9;
    
    
    Add_10 = Product_15 + Unit_Delay1_10;
    
    
    Add_11 = Product_16 + Unit_Delay1_11;
    
    
    X3 = Product_18 + Unit_Delay1_12;
    
    
    Sum1_3 = theta - Add_3;
    
    
    Gain6_2 = (double) 1 / Tcp3 * Sum1_3;
    
    
    Gain5_3 = (double) 1 / Tcp3 * Sum1_3;
    
    
    Constant1_2 = ld2;
    
    
    Constant1_3 = ld1;
    
    
    Constant1_5 = ld3;
    
    
    thetad = _io_->thetad;
    
    
    e3_1 = thetad - theta;
    
    
    Sum1_2 = thetad - Add_2;
    
    
    thetaddot = (double) 1 / Tcp1 * Sum1_2;
    
    
    Gain5_2 = (double) 1 / Tcp1 * Sum1_2;
    
    
    Sum1_1 = thetaddot - Add_1;
    
    
    thetaddotdot = (double) 1 / Tcp2 * Sum1_1;
    
    
    Gain5_1 = (double) 1 / Tcp2 * Sum1_1;
    
    
    Constant_7 = a1;
    
    
    Constant_5 = a3;
    
    
    Mux_1[0] = e3_1;
    Mux_1[1] = thetaddot;
    Mux_1[2] = X2;
    
    
    Demux_7 = Mux_1[0];
    Demux_8 = Mux_1[1];
    Demux_9 = Mux_1[2];
    
    
    Product_7 = Constant_4 * Demux_7;
    
    
    Product1_4 = Constant1_2 * Demux_9;
    
    
    Add_4 = Product_7 + Demux_8 + Product1_4;
    
    
    Mux_3[0] = e1;
    Mux_3[1] = Gain6_1;
    Mux_3[2] = X1;
    
    
    Demux_20 = Mux_3[0];
    Demux_21 = Mux_3[1];
    Demux_22 = Mux_3[2];
    
    
    Product_12 = Constant_6 * Demux_20;
    
    
    Product1_6 = Constant1_3 * Demux_22;
    
    
    Add_8 = Product_12 + Demux_21 + Product1_6;
    
    
    Constant_9 = a5;
    
    
    Constant1_4 = a2;
    
    
    Constant1_1 = a4;
    
    
    e4 = Add_4 - Gain6_2;
    
    
    e2 = Add_8 - Gain6_3;
    
    
    Constant1_6 = b3;
    
    
    Constant2_1 = b1;
    
    
    Constant2_2 = b2;
    
    
    Constant2_3 = c5;
    
    
    c7_2_3 = Constant2_3 * Constant2_3;
    
    
    Constant3_1 = c1;
    
    
    c7_2_1 = Constant3_1 * Constant3_1;
    
    
    Constant3_2 = c3;
    
    
    c7_2_2 = Constant3_2 * Constant3_2;
    
    
    Constant3_3 = c6;
    
    
    c7_c8_3 = Constant2_3 + Constant3_3;
    
    
    Constant4_1 = c2;
    
    
    c7_c8_1 = Constant3_1 + Constant4_1;
    
    
    Constant4_2 = c4;
    
    
    c7_c8_2 = Constant3_2 + Constant4_2;
    
    
    Mux2[0] = Demux_3;
    Mux2[1] = Demux_4;
    Mux2[2] = Demux_5;
    
    
    psi = Mux2[0];
    phidot_4 = Mux2[1];
    thetadot = Mux2[2];
    
    
    Sum1_9 = psi - Add_11;
    
    
    psidot_5 = (double) 1 / Tcyw3 * Sum1_9;
    
    
    Gain5_9 = (double) 1 / Tcyw3 * Sum1_9;
    
    
    Constant4_3 = ld3;
    
    
    _1_c7_2_ld4_3 = ld1_3 - c7_2_3 + Constant4_3;
    
    
    Constant5_1 = ld1;
    
    
    _1_c7_2_ld4_1 = ld1_1 - c7_2_1 + Constant5_1;
    
    
    Constant5_2 = ld2;
    
    
    _1_c7_2_ld4_2 = ld1_2 - c7_2_2 + Constant5_2;
    
    
    psid = _io_->psid;
    
    
    Sum1_7 = psid - Add_9;
    
    
    psiddot_8 = (double) 1 / Tcyw1 * Sum1_7;
    
    
    Gain5_7 = (double) 1 / Tcyw1 * Sum1_7;
    
    
    Sum1_8 = psiddot_8 - Add_10;
    
    
    psiddotdot = (double) 1 / Tcyw2 * Sum1_8;
    
    
    Gain5_8 = (double) 1 / Tcyw2 * Sum1_8;
    
    
    e5_2 = psid - psi;
    if (e5_2 > PI)
        e5_2 = e5_2 - 2*PI;
    if (e5_2 < -PI)
        e5_2 = e5_2 +2*PI;
    
    
    Mux_4[0] = e5_2;
    Mux_4[1] = psiddot_8;
    Mux_4[2] = X3;
    
    
    Demux_34 = Mux_4[0];
    Demux_35 = Mux_4[1];
    Demux_36 = Mux_4[2];
    
    
    Product_17 = Constant_8 * Demux_34;
    
    
    Product1_8 = Constant1_5 * Demux_36;
    
    
    Add_12 = Product_17 + Demux_35 + Product1_8;
    
    
    e6 = Add_12 - psidot_5;
    
    
    for (i1_3 = 0; i1_3 < 4; i1_3++) {
        omgs[i1_3] = _io_->omgs[i1_3];
    }
    
    
    Demux_30 = omgs[0];
    Demux_31 = omgs[1];
    Demux_32 = omgs[2];
    Demux_33 = omgs[3];
    
    
    omgr = -Demux_30 + Demux_31 - Demux_32 + Demux_33;
    
    
    Mux1_1[0] = phidot;
    Mux1_1[1] = psidot;
    Mux1_1[2] = thetaddotdot;
    Mux1_1[3] = X2;
    Mux1_1[4] = e3_1;
    Mux1_1[5] = e4;
    Mux1_1[6] = omgr;
    
    
    Demux_10 = Mux1_1[0];
    Demux_11 = Mux1_1[1];
    Demux_12 = Mux1_1[2];
    Demux_13 = Mux1_1[3];
    Demux_14 = Mux1_1[4];
    Demux_15 = Mux1_1[5];
    Demux_16 = Mux1_1[6];
    
    
    Mux1_3[0] = Demux_18;
    Mux1_3[1] = Demux_19;
    Mux1_3[2] = phiddotdot;
    Mux1_3[3] = X1;
    Mux1_3[4] = e1;
    Mux1_3[5] = e2;
    Mux1_3[6] = omgr;
    
    
    Demux_23 = Mux1_3[0];
    Demux_24 = Mux1_3[1];
    Demux_25 = Mux1_3[2];
    Demux_26 = Mux1_3[3];
    Demux_27 = Mux1_3[4];
    Demux_28 = Mux1_3[5];
    Demux_29 = Mux1_3[6];
    
    
    Product1_5 = Demux_10 * Demux_11 * Constant_5;
    
    
    Product1_7 = Demux_23 * Demux_24 * Constant_7;
    
    
    u6_c7_c8__1 = c7_c8_1 * Demux_28;
    
    
    u6_c7_c8__2 = c7_c8_2 * Demux_15;
    
    
    Product3_2 = Demux_10 * Constant1_1 * Demux_16;
    
    
    Product3_1 = Demux_23 * Constant1_4 * Demux_29;
    
    
    u4_1_c7_2_ld4__1 = _1_c7_2_ld4_1 * Demux_27;
    
    
    Product2_1 = Constant3_1 * Constant5_1 * Demux_26;
    
    
    _1_c7_2_ld1_1 = u4_1_c7_2_ld4__1 + u6_c7_c8__1 - Product2_1 - Product1_7 + Product3_1 + Demux_25;
    
    
    U2 = 1.0 / Constant2_1 * _1_c7_2_ld1_1;
    
    
    Relational_Operator4_2 = U2 > Constant_2;
    
    
    Product_2 = Relational_Operator4_2 * Constant_2;
    
    
    Relational_Operator5_2 = U2 < Gain2_2;
    
    
    Product1_2 = Relational_Operator5_2 * Constant_2;
    
    
    Gain3_2 = -1 * Product1_2;
    
    
    Add2_2 = Product_2 + Gain3_2;
    
    
    if (Add2_2 != 0) {
        Switch5_2 = Add2_2;
    } else {
        Switch5_2 = U2;
    }
    
    
    _state_->Scope2_memory = Switch5_2;
    
    
    _io_->U2 = Switch5_2;
    
    
    u4_1_c7_2_ld4__2 = _1_c7_2_ld4_2 * Demux_14;
    
    
    Product2_2 = Constant3_2 * Constant5_2 * Demux_13;
    
    
    _1_c7_2_ld1_2 = u4_1_c7_2_ld4__2 + u6_c7_c8__2 - Product2_2 - Product1_5 - Product3_2 + Demux_12;
    
    
    U3 = 1.0 / Constant2_2 * _1_c7_2_ld1_2;
    
    
    Relational_Operator4_1 = U3 > Constant_1;
    
    
    Product_1 = Relational_Operator4_1 * Constant_1;
    
    
    Relational_Operator5_1 = U3 < Gain2_1;
    
    
    Product1_1 = Relational_Operator5_1 * Constant_1;
    
    
    Gain3_1 = -1 * Product1_1;
    
    
    Add2_1 = Product_1 + Gain3_1;
    
    
    if (Add2_1 != 0) {
        Switch5_1 = Add2_1;
    } else {
        Switch5_1 = U3;
    }
    
    
    _state_->Scope1_memory_2 = Switch5_1;
    
    
    _io_->U3 = Switch5_1;
    
    
    Mux1_4[0] = phidot_4;
    Mux1_4[1] = thetadot;
    Mux1_4[2] = psiddotdot;
    Mux1_4[3] = X3;
    Mux1_4[4] = e5_2;
    Mux1_4[5] = e6;
    Mux1_4[6] = omgr;
    
    
    Demux_37 = Mux1_4[0];
    Demux_38 = Mux1_4[1];
    Demux_39 = Mux1_4[2];
    Demux_40 = Mux1_4[3];
    Demux_41 = Mux1_4[4];
    Demux_42 = Mux1_4[5];
    
    
    Product1_9 = Demux_37 * Demux_38 * Constant_9;
    
    
    u6_c7_c8__3 = c7_c8_3 * Demux_42;
    
    
    u4_1_c7_2_ld4__3 = _1_c7_2_ld4_3 * Demux_41;
    
    
    Product2_3 = Constant2_3 * Constant4_3 * Demux_40;
    
    
    _1_c7_2_ld1_3 = u4_1_c7_2_ld4__3 + u6_c7_c8__3 - Product2_3 - Product1_9 + Demux_39;
    
    
    U4 = 1.0 / Constant1_6 * _1_c7_2_ld1_3;
    
    
    Relational_Operator4_3 = U4 > Constant_3;
    
    
    Product_3 = Relational_Operator4_3 * Constant_3;
    
    
    Relational_Operator5_3 = U4 < Gain2_3;
    
    
    Product1_3 = Relational_Operator5_3 * Constant_3;
    
    
    Gain3_3 = -1 * Product1_3;
    
    
    Add2_3 = Product_3 + Gain3_3;
    
    
    if (Add2_3 != 0) {
        Switch5_3 = Add2_3;
    } else {
        Switch5_3 = U4;
    }
    
    
    _state_->Scope4_memory = Switch5_3;
    
    
    _io_->U4 = Switch5_3;
    
    
    _state_->Unit_Delay1_memory_12 = X3;
    
    
    _state_->Unit_Delay1_memory_11 = Add_11;
    
    
    _state_->Unit_Delay1_memory_10 = Add_10;
    
    
    _state_->Unit_Delay1_memory_9 = Add_9;
    
    
    _state_->Unit_Delay1_memory_8 = X1;
    
    
    _state_->Unit_Delay1_memory_7 = Add_7;
    
    
    _state_->Unit_Delay1_memory_6 = Add_6;
    
    
    _state_->Unit_Delay1_memory_5 = Add_5;
    
    
    _state_->Unit_Delay1_memory_4 = X2;
    
    
    _state_->Unit_Delay1_memory_3 = Add_3;
    
    
    _state_->Unit_Delay1_memory_2 = Add_1;
    
    
    _state_->Unit_Delay1_memory_1 = Add_2;
    
    
    _state_->Unit_Delay2_memory_12 = e5_2;
    
    
    _state_->Unit_Delay2_memory_11 = Gain5_9;
    
    
    _state_->Unit_Delay2_memory_10 = Gain5_8;
    
    
    _state_->Unit_Delay2_memory_9 = Gain5_7;
    
    
    _state_->Unit_Delay2_memory_8 = e1;
    
    
    _state_->Unit_Delay2_memory_7 = Gain5_6;
    
    
    _state_->Unit_Delay2_memory_6 = Gain5_5;
    
    
    _state_->Unit_Delay2_memory_5 = Gain5_4;
    
    
    _state_->Unit_Delay2_memory_4 = e3_1;
    
    
    _state_->Unit_Delay2_memory_3 = Gain5_3;
    
    
    _state_->Unit_Delay2_memory_2 = Gain5_1;
    
    
    _state_->Unit_Delay2_memory_1 = Gain5_2;
    
}

